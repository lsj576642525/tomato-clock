{"version":3,"sources":["redux/reducers/index.ts","redux/reducers/todos.ts","redux/actionTypes.ts","redux/reducers/tomatoes.ts","redux/store.ts","config/axios.ts","components/Tomatoes/CountDown.tsx","redux/actions.ts","components/Todos/TodoInput.tsx","components/Todos/TodoItem.tsx","components/Todos/Todos.tsx","components/Tomatoes/TomatoAction.tsx","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","components/Statistics/Polygon.tsx","components/Statistics/TodoHistory/TodoHistoryTodoItem.tsx","components/Statistics/TodoHistory/TodoHistory.tsx","components/Statistics/Statistics.tsx","components/Index/Index.tsx","components/LogIn/LogIn.tsx","components/SignUp/SignUp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["combineReducers","todos","state","action","type","payload","map","t","id","Object","assign","editing","tomatoes","store","createStore","rootReducer","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","timerId","updateTodo","TodoInput","props","onDescriptionChange","e","setState","description","target","value","addTodo","a","post","data","resource","Error","onkeyUp","keyCode","this","suffix","EnterOutlined","onClick","placeholder","onChange","onKeyUp","React","Component","mapDispatchToProps","connect","ownProps","TodoItem","editTodo","params","completed","completed_at","Date","put","editText","Editing","className","DeleteFilled","deleted","Text","todoItemClass","classNames","checked","Todos","unCompletedTodos","key","filter","unDeletedTodos","CountDown","countDown","timer","setInterval","time","onFinish","clearInterval","percent","duration","style","width","min","Math","floor","second","confirm","Modal","TomatoAction","addDescription","forceUpdate","updateTomato","ended_at","abortTomato","aborted","unFinishedTomatoes","showConfirm","title","icon","ExclamationCircleOutlined","onOk","onCancel","okText","cancelText","html","undefined","startTomato","startedAt","parse","started_at","timeNow","getTime","CloseCircleOutlined","TomatoItem","format","TomatoList","list","dates","d","finishedTomatoes","length","keys","sort","b","Tomatoes","addTomato","_","groupBy","tomato","Polygon","point","firstDay","finishedY","range","finishedCount","pointArr","date","x","y","totalFinishedCount","join","log","fill","stroke","strokeWidth","points","TodoHistoryTodoItem","todo","updated_at","formatText","itemType","created_at","TabPane","Tabs","TodoHistory","finishedTodoList","finishedDates","dailyFinishedTodos","deletedTodoList","deletedTodos","defaultActiveKey","tab","finishedTodos","Statistics","dailyTodos","Index","getTodos","get","resources","initTodos","getTomatoes","initTomatoes","logout","history","push","menu","Item","SettingOutlined","LogoutOutlined","getMe","user","status","overlay","account","DownOutlined","LogIn","onAccountChange","onPasswordChange","password","submit","prefix","UserOutlined","Password","to","SignUp","onPasswordConfirmationChange","password_confirmation","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.861fb3eb.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\n\nimport todos from \"./todos\";\nimport tomatoes from \"./tomatoes\";\n\nexport default combineReducers({ todos, tomatoes });\n","import { ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO } from \"../actionTypes\";\n\nexport default (state: any[] = [], action: any) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [action.payload, ...state];\n\n    case INIT_TODOS:\n      return [...action.payload];\n\n    case UPDATE_TODO:\n      return state.map((t) => {\n        if (t.id === action.payload.id) {\n          return action.payload;\n        } else {\n          return t;\n        }\n      });\n\n    case EDIT_TODO:\n      return state.map((t: any) => {\n        if (t.id === action.payload) {\n          return Object.assign(t, { editing: true });\n        } else {\n          return Object.assign(t, { editing: false });\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n","export const ADD_TODO = \"ADD_TODO\";\nexport const INIT_TODOS = \"INIT_TODOS\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\nexport const EDIT_TODO = \"EDIT_TODO\";\n\nexport const ADD_TOMATO = \"ADD_TOMATO\";\nexport const INIT_TOMATOES = \"INIT_TOMATOES\";\nexport const UPDATE_TOMATO = \"UPDATE_TOMATO\";\n","import { ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO } from \"../actionTypes\";\n\nexport default (state: any[] = [], action: any) => {\n  switch (action.type) {\n    case ADD_TOMATO:\n      return [action.payload, ...state];\n    case INIT_TOMATOES:\n      return [...action.payload];\n    case UPDATE_TOMATO:\n      return state.map((t) => {\n        if (t.id === action.payload.id) {\n          return action.payload;\n        } else {\n          return t;\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import axios from \"axios\";\n\nconst APP_ID = \"wK42ZHn8zfxtupYUZ2J6crxx\";\nconst APP_SECRET = \"eyRerzhKvXxZDDJ4hjFc9uMs\";\n\nconst instance = axios.create({\n  baseURL: \"https://gp-server.hunger-valley.com/\",\n  //   timeout: 1000,\n  headers: {\n    \"t-app-id\": APP_ID,\n    \"t-app-secret\": APP_SECRET,\n  },\n});\n\n// Add a request interceptor\ninstance.interceptors.request.use(\n  function (config) {\n    // Do something before request is sent\n    const xToken = localStorage.getItem(\"x-token\");\n    if (xToken) {\n      config.headers[\"Authorization\"] = `Bearer ${xToken}`;\n    }\n    return config;\n  },\n  function (error) {\n    // Do something with request error\n    console.error(error);\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\ninstance.interceptors.response.use(\n  function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    if (response.headers[\"x-token\"]) {\n      localStorage.setItem(\"x-token\", response.headers[\"x-token\"]);\n    }\n    return response;\n  },\n  function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n","import React from \"react\";\nimport \"./CountDown.scss\";\n\ninterface IProps {\n  timer: number;\n  onFinish: () => void;\n  duration: any;\n}\n\ninterface IState {\n  countDown: number;\n}\n\nlet timerId: NodeJS.Timeout;\n\nclass CountDown extends React.Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      countDown: this.props.timer,\n    };\n  }\n\n  get countDown() {\n    const min = Math.floor(this.state.countDown / 1000 / 60);\n    const second = Math.floor((this.state.countDown / 1000) % 60);\n    return `${min < 10 ? `0${min}` : min}:${\n      second < 10 ? `0${second}` : second\n    }`;\n  }\n\n  componentDidMount() {\n    timerId = setInterval(() => {\n      //   document.title = `${this.countDown} - 番茄闹钟`;\n      let time = this.state.countDown;\n      this.setState({ countDown: time - 1000 });\n      if (time < 1000) {\n        // document.title = `番茄闹钟`;\n        this.props.onFinish();\n        clearInterval(timerId);\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(timerId);\n  }\n\n  render() {\n    const percent = 1 - this.state.countDown / this.props.duration;\n    return (\n      <div className=\"CountDown\" id=\"CountDown\">\n        <span className=\"restTime\">{this.countDown}</span>\n        <div className=\"progress\" style={{ width: `${percent * 100}%` }} />\n      </div>\n    );\n  }\n}\n\nexport default CountDown;\n","import {\n  ADD_TODO,\n  INIT_TODOS,\n  UPDATE_TODO,\n  EDIT_TODO,\n  ADD_TOMATO,\n  INIT_TOMATOES,\n  UPDATE_TOMATO,\n} from \"./actionTypes\";\n\nexport const addTodo = (payload: any) => {\n  return {\n    type: ADD_TODO,\n    payload,\n  };\n};\n\nexport const initTodos = (payload: any[]) => {\n  return {\n    type: INIT_TODOS,\n    payload,\n  };\n};\n\nexport const updateTodo = (payload: any) => {\n  return {\n    type: UPDATE_TODO,\n    payload,\n  };\n};\n\nexport const editTodo = (payload: number) => {\n  return {\n    type: EDIT_TODO,\n    payload,\n  };\n};\n\nexport const addTomato = (payload: any) => {\n  return {\n    type: ADD_TOMATO,\n    payload,\n  };\n};\n\nexport const initTomatoes = (payload: any[]) => {\n  return {\n    type: INIT_TOMATOES,\n    payload,\n  };\n};\n\nexport const updateTomato = (payload: any[]) => {\n  return {\n    type: UPDATE_TOMATO,\n    payload,\n  };\n};\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport { EnterOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../../redux/actions\";\nimport axios from \"../../config/axios\";\n\ninterface IState {\n  description: string;\n}\n\nclass TodoInput extends React.Component<any, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      description: \"\",\n    };\n  }\n\n  onDescriptionChange = (e: any) => {\n    this.setState({\n      description: e.target.value,\n    });\n  };\n\n  addTodo = async () => {\n    try {\n      const response = await axios.post(\"todos\", {\n        description: this.state.description,\n      });\n      this.props.addTodo(response.data.resource);\n    } catch (error) {\n      throw new Error(error);\n    }\n    this.setState({ description: \"\" });\n  };\n\n  onkeyUp = (e: any) => {\n    if (e.keyCode === 13 && this.state.description !== \"\") {\n      this.addTodo();\n    }\n  };\n\n  render() {\n    const { description } = this.state;\n    const suffix = description ? (\n      <EnterOutlined onClick={this.addTodo} />\n    ) : (\n      <span />\n    );\n    return (\n      <div>\n        <Input\n          placeholder=\"添加新任务\"\n          suffix={suffix}\n          value={description}\n          onChange={this.onDescriptionChange}\n          onKeyUp={this.onkeyUp}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  ...ownProps,\n});\n\nconst mapDispatchToProps = { addTodo };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);\n","import React from \"react\";\nimport { Checkbox } from \"antd\";\nimport { DeleteFilled } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport { editTodo, updateTodo } from \"../../redux/actions\";\nimport axios from \"../../config/axios\";\nimport classNames from \"classnames\";\nimport \"./TodoItem.scss\";\n\ninterface IState {\n  editText: string;\n}\n\ninterface IProps {\n  id: number;\n  description: string;\n  completed: boolean;\n  editing: boolean;\n  updateTodo: (payload: any) => any;\n  editTodo: (id: number) => any;\n}\n\nclass TodoItem extends React.Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      editText: this.props.description,\n    };\n  }\n\n  editTodo = () => {\n    this.props.editTodo(this.props.id);\n  };\n\n  updateTodo = async (params: any) => {\n    if (params.completed) {\n      params.completed_at = new Date();\n    }\n    try {\n      const response = await axios.put(`todos/${this.props.id}`, params);\n\n      this.props.updateTodo(response.data.resource);\n    } catch (error) {}\n  };\n\n  onKeyUp = (e: any) => {\n    if (e.keyCode === 13 && this.state.editText !== \"\") {\n      this.updateTodo({ description: this.state.editText });\n    }\n  };\n\n  render() {\n    const Editing = (\n      <div className=\"editing\">\n        <input\n          value={this.state.editText}\n          onChange={(e) => this.setState({ editText: e.target.value })}\n          onKeyUp={this.onKeyUp}\n        ></input>\n        <div className=\"iconWrapper\">\n          <DeleteFilled onClick={() => this.updateTodo({ deleted: true })} />\n        </div>\n      </div>\n    );\n    const Text = (\n      <span className=\"text\" onClick={this.editTodo}>\n        {this.props.description}\n      </span>\n    );\n    const todoItemClass = classNames({\n      TodoItem: true,\n      editing: this.props.editing,\n      completed: this.props.completed,\n    });\n    return (\n      <div className={todoItemClass} id=\"TodoItem\">\n        <Checkbox\n          checked={this.props.completed}\n          onChange={(e: any) => {\n            this.updateTodo({ completed: e.target.checked });\n          }}\n        />\n        {this.props.editing ? Editing : Text}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  ...ownProps,\n});\n\nconst mapDispatchToProps = { editTodo, updateTodo };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);\n","import React from \"react\";\nimport TodoInput from \"./TodoInput\";\nimport TodoItem from \"./TodoItem\";\nimport { connect } from \"react-redux\";\nimport \"./Todos.scss\";\n\n// interface IState {\n//   todos: any[];\n// }\n\nclass Todos extends React.Component<any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      todos: [],\n    };\n  }\n\n  get unDeletedTodos() {\n    return this.props.todos.filter((t: any) => !t.deleted);\n  }\n\n  get unCompletedTodos() {\n    return this.unDeletedTodos.filter((t: any) => !t.completed);\n  }\n\n  get completedTodos() {\n    return this.unDeletedTodos.filter((t: any) => t.completed);\n  }\n\n  render() {\n    return (\n      <div className=\"Todos\" id=\"Todos\">\n        <TodoInput />\n        <div className=\"todoLists\">\n          {this.unCompletedTodos.map((t: any) => (\n            <TodoItem key={t.id} {...t} />\n          ))}\n          {/* {this.completedTodos.map((t: any) => (\n            <TodoItem key={t.id} {...t} />\n          ))} */}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  todos: state.todos,\n  ...ownProps,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\n","import React from \"react\";\nimport { Button, Input, Modal } from \"antd\";\nimport {\n  CloseCircleOutlined,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\nimport axios from \"../../config/axios\";\nimport CountDown from \"./CountDown\";\nimport \"./TomatoAction.scss\";\n\nconst { confirm } = Modal;\n\n// import CountDown from \"./CountDownHooks\"; // 此场景不适用\n\ninterface IProps {\n  startTomato: () => void;\n  unFinishedTomatoes: any;\n  updateTomato: any;\n}\n\ninterface IState {\n  description: string;\n}\n\nclass TomatoAction extends React.Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      description: \"\",\n    };\n  }\n\n  onKeyUp = (e: any) => {\n    if (e.keyCode === 13 && this.state.description !== \"\") {\n      this.addDescription();\n    }\n  };\n\n  onFinish = () => {\n    this.forceUpdate();\n  };\n\n  addDescription = () => {\n    this.updateTomato({\n      description: this.state.description,\n      ended_at: new Date(),\n    });\n    this.setState({\n      description: \"\",\n    });\n  };\n\n  abortTomato = () => {\n    this.updateTomato({ aborted: true });\n  };\n\n  updateTomato = async (params: any) => {\n    try {\n      const response = await axios.put(\n        `tomatoes/${this.props.unFinishedTomatoes.id}`,\n        params\n      );\n      this.props.updateTomato(response.data.resource);\n    } catch (error) {}\n  };\n\n  showConfirm = () => {\n    confirm({\n      title: \"您目前正在一个番茄工作时间中，要放弃这个番茄吗？\",\n      icon: <ExclamationCircleOutlined />,\n      onOk: () => {\n        this.abortTomato();\n      },\n      onCancel() {},\n      okText: \"确定放弃\",\n      cancelText: \"取消\",\n    });\n  };\n\n  render() {\n    let html = <div></div>;\n\n    if (this.props.unFinishedTomatoes === undefined) {\n      html = (\n        <Button\n          className=\"startTomatoButton\"\n          onClick={() => this.props.startTomato()}\n        >\n          开始番茄\n        </Button>\n      );\n    } else {\n      const startedAt = Date.parse(this.props.unFinishedTomatoes.started_at);\n      const duration = this.props.unFinishedTomatoes.duration;\n      const timeNow = new Date().getTime();\n      if (timeNow - startedAt > duration) {\n        html = (\n          <div className=\"inputWrapper\">\n            <Input\n              value={this.state.description}\n              placeholder=\"请输入你刚刚完成的任务\"\n              onChange={(e) => this.setState({ description: e.target.value })}\n              onKeyUp={(e) => this.onKeyUp(e)}\n            />\n            <CloseCircleOutlined className=\"abort\" onClick={this.showConfirm} />\n          </div>\n        );\n      } else if (timeNow - startedAt < duration) {\n        const timer = startedAt + duration - timeNow;\n        html = (\n          <div className=\"countDownWrapper\">\n            <CountDown\n              duration={duration}\n              timer={timer}\n              onFinish={this.onFinish}\n            />\n            <CloseCircleOutlined className=\"abort\" onClick={this.showConfirm} />\n          </div>\n        ); // 倒计时\n      }\n    }\n\n    return (\n      <div className=\"TomatoAction\" id=\"TomatoAction\">\n        {html}\n      </div>\n    );\n  }\n}\n\nexport default TomatoAction;\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport \"./TomatoList.scss\";\n\ninterface IProps {\n  finishedTomatoes: any;\n}\n\nconst TomatoItem = function (props: any) {\n  return (\n    <div className=\"TomatoItem\">\n      <span className=\"timeRange\">\n        {format(Date.parse(props.started_at), \"HH:mm\")}\n        {\" - \"}\n        {format(Date.parse(props.ended_at), \"HH:mm\")}\n      </span>\n      <span className=\"description\">{props.description}</span>\n    </div>\n  );\n};\n\nclass TomatoList extends React.Component<IProps> {\n  constructor(props: any) {\n    super(props);\n    this.state = {};\n  }\n\n  get dates() {\n    const dates = Object.keys(this.props.finishedTomatoes);\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a));\n  }\n\n  render() {\n    const list = this.dates.map((d) => {\n      const tomatoes = this.props.finishedTomatoes[d];\n      return (\n        <div key={d} className=\"dailyTomatoes\">\n          <div className=\"title\">\n            <span className=\"dateTime\">{format(Date.parse(d), \"M月dd日\")}</span>\n            <span className=\"finishedCount\">完成了{tomatoes.length}个番茄</span>\n          </div>\n          {tomatoes.map((t: any) => (\n            <TomatoItem key={t.id} {...t} />\n          ))}\n        </div>\n      );\n    });\n    return (\n      <div className=\"TomatoList\" id=\"TomatoList\">\n        {list}\n      </div>\n    );\n  }\n}\n\nexport default TomatoList;\n","import React from \"react\";\nimport TomatoAction from \"./TomatoAction\";\nimport TomatoList from \"./TomatoList\";\nimport axios from \"../../config/axios\";\nimport { connect } from \"react-redux\";\nimport { addTomato, updateTomato } from \"../../redux/actions\";\nimport _ from \"lodash\";\nimport { format } from \"date-fns\";\nimport \"./Tomatoes.scss\";\n\ninterface IProps {\n  addTomato: (payload: any) => any;\n  initTomatoes: (payload: any) => any;\n  tomatoes: any[];\n  updateTomato: any;\n}\n\nclass Tomatoes extends React.Component<IProps> {\n  constructor(props: any) {\n    super(props);\n    this.state = {};\n  }\n\n  get unFinishedTomatoes() {\n    return this.props.tomatoes.filter(\n      (t) => !t.description && !t.ended_at && !t.aborted\n    )[0];\n  }\n\n  get finishedTomatoes() {\n    const finishedTomatoes = this.props.tomatoes.filter(\n      (t) => t.description && t.ended_at && !t.aborted\n    );\n\n    const obj = _.groupBy(finishedTomatoes, (tomato) => {\n      return format(Date.parse(tomato.started_at), \"yyyy-MM-d\");\n    });\n\n    return obj;\n  }\n\n  startTomato = async () => {\n    try {\n      const response = await axios.post(\"tomatoes\", {\n        duration: 1500000,\n      });\n      this.props.addTomato(response.data.resource);\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Tomatoes\" id=\"Tomatoes\">\n        <TomatoAction\n          startTomato={this.startTomato}\n          unFinishedTomatoes={this.unFinishedTomatoes}\n          updateTomato={this.props.updateTomato}\n        />\n        <TomatoList finishedTomatoes={this.finishedTomatoes} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  tomatoes: state.tomatoes,\n  ...ownProps,\n});\n\nconst mapDispatchToProps = { addTomato, updateTomato };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes);\n","import React from \"react\";\n\ninterface IProps {\n  data: any;\n  totalFinishedCount: number;\n}\n\nclass Polygon extends React.Component<IProps> {\n  point = () => {\n    const dates = Object.keys(this.props.data).sort(\n      (a, b) => Date.parse(a) - Date.parse(b)\n    );\n    const firstDay = dates[0];\n    if (firstDay) {\n      const lastDay = new Date().getTime();\n      const range = lastDay - Date.parse(firstDay);\n      let finishedCount = 0;\n      let finishedY;\n      const pointArr = dates.map((date) => {\n        const x = ((Date.parse(date) - Date.parse(firstDay)) / range) * 240;\n        finishedCount += this.props.data[date].length;\n        const y = (1 - finishedCount / this.props.totalFinishedCount) * 60;\n        finishedY = y;\n        return `${x},${y}`;\n      });\n      return [\"0,60\", ...pointArr, `240,${finishedY}`, \"240,60\"].join(\" \");\n    } else {\n      return \"0,60 240,60 0,60\";\n    }\n  };\n\n  render() {\n    console.log(this.props);\n\n    return (\n      <div>\n        <svg>\n          <polygon\n            fill=\"rgba(215,78,78,0.1)\"\n            stroke=\"rgba(215,78,78,0.5)\"\n            strokeWidth=\"1\"\n            points={this.point()}\n          />\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default Polygon;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { format } from \"date-fns\";\nimport { updateTodo } from \"../../../redux/actions\";\nimport axios from \"../../../config/axios\";\nimport \"./TodoHistoryTodoItem.scss\";\n\ninterface IProps {\n  todo: any;\n  itemType: string;\n  updateTodo: (payload: any) => void;\n}\n\nclass TodoHistoryTodoItem extends React.Component<IProps> {\n  constructor(props: any) {\n    super(props);\n    this.state = {};\n  }\n\n  updateTodo = async (params: any) => {\n    try {\n      const response = await axios.put(`todos/${this.props.todo.id}`, params);\n      this.props.updateTodo(response.data.resource);\n    } catch (error) {}\n  };\n\n  render() {\n    let action;\n    let time = Date.parse(this.props.todo.updated_at);\n    let formatText = \"HH:mm\";\n    if (this.props.itemType === \"finished\") {\n      formatText = \"HH:mm\";\n      time = Date.parse(this.props.todo.updated_at);\n      action = (\n        <div className=\"action\">\n          <span\n            onClick={() =>\n              this.updateTodo({\n                completed: false,\n              })\n            }\n          >\n            恢复\n          </span>\n          <span\n            onClick={() =>\n              this.updateTodo({\n                deleted: true,\n              })\n            }\n          >\n            删除\n          </span>\n        </div>\n      );\n    } else if (this.props.itemType === \"deleted\") {\n      formatText = \"yyyy-MM-dd HH:mm\";\n      time = Date.parse(this.props.todo.created_at);\n      action = (\n        <div className=\"action\">\n          <span\n            onClick={() =>\n              this.updateTodo({\n                deleted: false,\n              })\n            }\n          >\n            恢复\n          </span>\n        </div>\n      );\n    }\n    return (\n      <div className=\"TodoHistoryTodoItem\" id=\"TodoHistoryTodoItem\">\n        <div className=\"text\">\n          <span className=\"time\">{format(time, formatText)}</span>\n          <span className=\"description\">{this.props.todo.description}</span>\n        </div>\n        {action}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  todos: state.todos,\n  ...ownProps,\n});\n\nconst mapDispatchToProps = { updateTodo };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoHistoryTodoItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { format } from \"date-fns\";\nimport _ from \"lodash\";\nimport { Tabs } from \"antd\";\nimport TodoHistoryTodoItem from \"./TodoHistoryTodoItem\";\nimport \"./TodoHistory.scss\";\n\nconst { TabPane } = Tabs;\n\ninterface IProps {\n  todos: any[];\n}\n\nclass TodoHistory extends React.Component<IProps> {\n  constructor(props: any) {\n    super(props);\n    this.state = {};\n  }\n\n  get finishedTodos() {\n    return this.props.todos.filter((t) => t.completed && !t.deleted);\n  }\n\n  get deletedTodos() {\n    return this.props.todos.filter((t) => t.deleted);\n  }\n\n  get dailyFinishedTodos() {\n    return _.groupBy(this.finishedTodos, (todo) => {\n      return format(Date.parse(todo.updated_at), \"yyyy-MM-d\");\n    });\n  }\n\n  get finishedDates() {\n    return Object.keys(this.dailyFinishedTodos).sort(\n      (a, b) => Date.parse(b) - Date.parse(a)\n    );\n  }\n\n  render() {\n    const finishedTodoList = this.finishedDates.map((date) => {\n      return (\n        <div key={date} className=\"dailyTodos\">\n          <div className=\"summary\">\n            <p className=\"date\">{date}</p>\n            <p className=\"finishedCount\">\n              完成了{this.dailyFinishedTodos[date].length}个任务\n            </p>\n          </div>\n          <div className=\"todoList\">\n            {this.dailyFinishedTodos[date].map((todo) => (\n              <TodoHistoryTodoItem\n                key={todo.id}\n                todo={todo}\n                itemType=\"finished\"\n              />\n            ))}\n          </div>\n        </div>\n      );\n    });\n\n    const deletedTodoList = this.deletedTodos.map((todo) => {\n      return (\n        <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"deleted\" />\n      );\n    });\n\n    return (\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"已完成的任务\" key=\"1\">\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\n            {finishedTodoList}\n          </div>\n        </TabPane>\n        <TabPane tab=\"已删除的任务\" key=\"2\">\n          <div className=\"TodoHistory\" id=\"TodoHistory\">\n            {deletedTodoList}\n          </div>\n        </TabPane>\n      </Tabs>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  todos: state.todos,\n  ...ownProps,\n});\n\nexport default connect(mapStateToProps)(TodoHistory);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Polygon from \"./Polygon\";\nimport TodoHistory from \"./TodoHistory/TodoHistory\";\nimport { format } from \"date-fns\";\nimport _ from \"lodash\";\nimport \"./Statistics.scss\";\n\ninterface IProps {\n  todos: any[];\n}\n\nclass Statistics extends React.Component<IProps> {\n  constructor(props: any) {\n    super(props);\n    this.state = {};\n  }\n\n  get finishedTodos() {\n    return this.props.todos.filter((t) => t.completed && !t.deleted);\n  }\n\n  get dailyTodos() {\n    return _.groupBy(this.finishedTodos, (todo) => {\n      return format(Date.parse(todo.updated_at), \"yyyy-MM-d\");\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Statistics\" id=\"Statistics\">\n        <ul>\n          {/* <li>统计</li>\n          <li>目标</li>\n          <li>番茄历史</li> */}\n          <li>\n            任务历史 累计完成{this.finishedTodos.length}个任务\n            <Polygon\n              data={this.dailyTodos}\n              totalFinishedCount={this.finishedTodos.length}\n            />\n          </li>\n        </ul>\n        <TodoHistory />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  todos: state.todos,\n  ...ownProps,\n});\n\nexport default connect(mapStateToProps)(Statistics);\n","import React from \"react\";\nimport { Dropdown, Menu } from \"antd\";\nimport {\n  DownOutlined,\n  LogoutOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport axios from \"../../config/axios\";\nimport Todos from \"../../components/Todos/Todos\";\nimport Tomatoes from \"../../components/Tomatoes/Tomatoes\";\nimport Statistics from \"../../components/Statistics/Statistics\";\nimport { initTodos } from \"../../redux/actions\";\nimport { initTomatoes } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\nimport \"./Index.scss\";\n\ninterface IState {\n  user: any;\n}\n\nclass Index extends React.Component<any, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      user: {},\n    };\n  }\n\n  getTodos = async () => {\n    try {\n      const response = await axios.get(\"todos\");\n      const todos = response.data.resources.map((t: any) =>\n        Object.assign({}, t, { editing: false })\n      );\n      this.props.initTodos(todos);\n    } catch (e) {}\n  };\n\n  getTomatoes = async () => {\n    try {\n      const response = await axios.get(\"tomatoes\");\n      this.props.initTomatoes(response.data.resources);\n    } catch (error) {}\n  };\n\n  logout = () => {\n    localStorage.setItem(\"x-token\", \"\");\n    this.props.history.push(\"/login\");\n  };\n\n  menu = (\n    <Menu>\n      <Menu.Item key=\"1\" icon={<SettingOutlined />}>\n        个人设置\n      </Menu.Item>\n      <Menu.Item key=\"2\" onClick={this.logout} icon={<LogoutOutlined />}>\n        注销\n      </Menu.Item>\n    </Menu>\n  );\n\n  async componentDidMount() {\n    await this.getMe();\n    await this.getTodos();\n    await this.getTomatoes();\n  }\n\n  getMe = async () => {\n    try {\n      const response = await axios.get(\"me\");\n      this.setState({\n        user: response.data,\n      });\n    } catch (error) {\n      if (error.response.status === 401) {\n        this.props.history.push(\"/login\");\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Home\" id=\"Home\">\n        <header>\n          {/* <p>欢迎：{this.state.user && this.state.user.account}</p> */}\n          <span className=\"logo\">番茄闹钟</span>\n          <Dropdown overlay={this.menu}>\n            <span>\n              {this.state.user && this.state.user.account} <DownOutlined />\n            </span>\n          </Dropdown>\n        </header>\n        <main>\n          <Tomatoes />\n          <Todos />\n        </main>\n        <Statistics />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  todos: state.todos,\n  tomatoes: state.tomatoes,\n  ...ownProps,\n});\n\nconst mapDispatchToProps = { initTodos, initTomatoes };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\n","import React from \"react\";\nimport { Input, Button } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport axios from \"../../config/axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.scss\";\n\ninterface IState {\n  account: string;\n  password: string;\n}\n\nclass LogIn extends React.Component<any, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      account: \"\",\n      password: \"\",\n    };\n  }\n\n  onAccountChange = (e: any) => {\n    this.setState({\n      account: e.target.value,\n    });\n  };\n  onPasswordChange = (e: any) => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n  submit = async () => {\n    const { account, password } = this.state;\n    try {\n      await axios.post(\"sign_in/user\", {\n        account,\n        password,\n      });\n      this.props.history.push(\"/\");\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  render() {\n    const { account, password } = this.state;\n    return (\n      <div className=\"Login\" id=\"Login\">\n        <h1>番茄🍅闹钟登录</h1>\n        <Input\n          placeholder=\"请输入用户名\"\n          prefix={<UserOutlined />}\n          value={account}\n          onChange={this.onAccountChange}\n        />\n        <Input.Password\n          placeholder=\"请输入密码\"\n          value={password}\n          onChange={this.onPasswordChange}\n        />\n        <Button type=\"primary\" className=\"loginButton\" onClick={this.submit}>\n          登录\n        </Button>\n        <p>\n          如果你没有账号，请立即 <Link to=\"/signUp\">注册</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;\n","import React from \"react\";\nimport { Input, Button } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport axios from \"../../config/axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./SignUp.scss\";\n\ninterface IState {\n  account: string;\n  password: string;\n  password_confirmation: string;\n}\n\nclass SignUp extends React.Component<any, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      account: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n    };\n  }\n\n  onAccountChange = (e: any) => {\n    this.setState({\n      account: e.target.value,\n    });\n  };\n  onPasswordChange = (e: any) => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n  onPasswordConfirmationChange = (e: any) => {\n    this.setState({\n      password_confirmation: e.target.value,\n    });\n  };\n  submit = async () => {\n    const { account, password, password_confirmation } = this.state;\n    try {\n      await axios.post(\"sign_up/user\", {\n        account,\n        password,\n        password_confirmation,\n      });\n      this.props.history.push(\"/\");\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  render() {\n    const { account, password, password_confirmation } = this.state;\n    return (\n      <div className=\"SignUp\" id=\"SignUp\">\n        <h1>番茄🍅闹钟注册</h1>\n        <Input\n          placeholder=\"请输入用户名\"\n          prefix={<UserOutlined />}\n          value={account}\n          onChange={this.onAccountChange}\n        />\n        <Input.Password\n          placeholder=\"请输入密码\"\n          value={password}\n          onChange={this.onPasswordChange}\n        />\n        <Input.Password\n          placeholder=\"请确认密码\"\n          value={password_confirmation}\n          onChange={this.onPasswordConfirmationChange}\n        />\n        <Button type=\"primary\" className=\"signUpButton\" onClick={this.submit}>\n          注册\n        </Button>\n        <p>\n          如果你有账号，请立即 <Link to=\"/login\">登录</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n","import * as React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Index from \"./components/Index/Index\";\nimport LogIn from \"./components/LogIn/LogIn\";\nimport SignUp from \"./components/SignUp/SignUp\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Route exact={true} path=\"/\" component={Index}></Route>\n        <Route path=\"/login\" component={LogIn}></Route>\n        <Route path=\"/signUp\" component={SignUp}></Route>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  // </React.StrictMode>\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}